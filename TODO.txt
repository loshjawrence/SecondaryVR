see if secondary command buffers with homogenous pipeline is better than one with mixed
get vr working
get dynamic viewport and camera working for single traversal through scene
remove redundant pipeline binds everytime recordCommandBufferSecondary is called and test again
fix pipeline selection since it's wrong
try input attachment option for pp desc set layout(cant since need more than 1 location for read)
get fragment barrel/chromatic aberration PP working
get pass-through post process(PP) working, also need offscreenTriangle
- can PostProcessPipeline be merged with Pipeline? is outputImage the only diff?
    also make it so that it can select when it needs to be Present vs offscreen
get mesh based barrel/chromatic aberration PP working
- get radial density masking working
- get MSAA working
- get multithreaded command recording working
- if model has no use for some vertex attributes dont send to gpu (dont add them to begin with?)
- add a descriptor type to reduce number of functions in VulkanDescriptor?
- associate command pools with the correct abstraction
- try combining the descriptor layouts into descriptor sets? is there benefit to this? does it simplify the VulkanDescriptor abstraction? 
    Does it make uber shaders easier, i.e. have one pipeline bound to one uber shader but you bind the textures appropriate for that mesh
    to specific descritpor sets (the descriptor layout has multiple sets that can be bound) and use push constant flag to tell the uber shader what this material is.
- fix camera so its controlling middel of head and not left eye
- lookup how to do single draw call vr

